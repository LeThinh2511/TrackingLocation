//
//  ViewController.swift
//  TrackingLocation
//
//  Created by ThinhLe on 3/30/20.
//  Copyright Â© 2020 ThinhLe. All rights reserved.
//

import UIKit
import GoogleMaps

class ViewController: UIViewController {
    @IBOutlet weak var mapView: GMSMapView!
    @IBOutlet weak var latitudeLabel: UILabel!
    @IBOutlet weak var longitudeLabel: UILabel!
    @IBOutlet weak var button: UIButton!
    
    var polygons = [GMSPolygon]()
    var isSafe = true
    var isFirst = true
    
    override func viewDidLoad() {
        super.viewDidLoad()
        mapView.settings.myLocationButton = true
        mapView.isMyLocationEnabled = true
        getPolygons()
        observeLocationUpdate()
        for polygon in polygons {
            polygon.strokeColor = .red
            polygon.strokeWidth = 1
            polygon.fillColor = UIColor.red.withAlphaComponent(0.5)
            polygon.map = mapView
        }
    }
    
    deinit {
        NotificationCenter.default.removeObserver(self)
    }

    @IBAction func didTapButton(_ sender: UIButton) {
    }
    
    private func observeLocationUpdate() {
        NotificationCenter.default.addObserver(forName: Define.locationUpdate, object: nil, queue: nil) { [weak self] (notification) in
            guard let location = notification.object as? CLLocation, let `self` = self else {
                return
            }
            let currentLocation = CLLocationCoordinate2D(latitude: location.coordinate.latitude, longitude: location.coordinate.longitude)
            if self.isInSafeArea(location: currentLocation) {
                let text = "You are in a safe area!!!"
                if !self.isSafe {
                    let manager = LocalNotificationManager.shared
                    manager.scheduleLocalNotification(alert: text)
                    Logger.write(text: text, to: Logger.locationLog)
                }
                self.isSafe = true
                print("log: \(text)")
                self.button.backgroundColor = .green
                self.button.setTitle(text, for: .normal)
            } else {
                let text = "You are in a dangerous area!!!"
                if self.isSafe {
                    let manager = LocalNotificationManager.shared
                    manager.scheduleLocalNotification(alert: text)
                    Logger.write(text: text, to: Logger.locationLog)
                }
                self.isSafe = false
                print("log: \(text)")
                self.button.backgroundColor = .red
                self.button.setTitle(text, for: .normal)
            }
            self.latitudeLabel.text = "\(location.coordinate.latitude)"
            self.longitudeLabel.text = "\(location.coordinate.longitude)"
            self.mapView.animate(toLocation: currentLocation)
            self.mapView.animate(toZoom: 16.0)
        }
    }
    
    private func isInSafeArea(location: CLLocationCoordinate2D) -> Bool {
        for area in polygons {
            if let path = area.path, GMSGeometryContainsLocation(location, path, true) {
                return false
            }
        }
        return true
    }
    
    private func getPolygons() {
        do {
            let data = haichau.data(using: .utf8)!
            let jsonResult = try JSONSerialization.jsonObject(with: data, options: .mutableLeaves)
            if let jsonResult = jsonResult as? [[Double]] {
                let path = GMSMutablePath()
                for point in jsonResult {
                    let coordinate = CLLocationCoordinate2D(latitude: point[1], longitude: point[0])
                    path.add(coordinate)
                }
                let polygon = GMSPolygon(path: path)
                polygons.append(polygon)
            }
        } catch {
        }
        
        do {
            let data = lienchieu.data(using: .utf8)!
            let jsonResult = try JSONSerialization.jsonObject(with: data, options: .mutableLeaves)
            if let jsonResult = jsonResult as? [[Double]] {
                let path = GMSMutablePath()
                for point in jsonResult {
                    let coordinate = CLLocationCoordinate2D(latitude: point[1], longitude: point[0])
                    path.add(coordinate)
                }
                let polygon = GMSPolygon(path: path)
                polygons.append(polygon )
            }
        } catch {
        }
    }
}

let lienchieu = """
[[108.091999999999999,16.18],[108.097999999999999,16.186],[108.103999999999999,16.186],[108.119,16.181000000000001],[108.135000000000005,16.190999999999999],[108.144000000000005,16.199000000000002],[108.153000000000006,16.199999999999999],[108.156000000000006,16.205000000000002],[108.173000000000002,16.202999999999999],[108.177000000000007,16.206],[108.194000000000003,16.208000000000002],[108.192999999999998,16.205000000000002],[108.195000000000007,16.201000000000001],[108.194000000000003,16.199000000000002],[108.192000000000007,16.201000000000001],[108.186000000000007,16.201000000000001],[108.183999999999997,16.199000000000002],[108.177999999999997,16.199999999999999],[108.176000000000002,16.198],[108.176000000000002,16.195],[108.174000000000007,16.193999999999999],[108.164000000000001,16.193999999999999],[108.162000000000006,16.190999999999999],[108.156000000000006,16.190999999999999],[108.153000000000006,16.184999999999999],[108.153999999999996,16.179000000000002],[108.152000000000001,16.176000000000002],[108.153999999999996,16.172000000000001],[108.150999999999996,16.169],[108.150999999999996,16.166],[108.153999999999996,16.164999999999999],[108.153000000000006,16.161000000000001],[108.147000000000006,16.161999999999999],[108.147000000000006,16.164999999999999],[108.140000000000001,16.164000000000001],[108.137,16.16],[108.137,16.149999999999999],[108.138999999999996,16.148],[108.138999999999996,16.145],[108.134,16.140000000000001],[108.129000000000005,16.141000000000002],[108.128,16.143000000000001],[108.125,16.141999999999999],[108.123000000000005,16.135999999999999],[108.125,16.123000000000001],[108.126999999999995,16.123999999999999],[108.128,16.120999999999999],[108.129999999999995,16.120999999999999],[108.129999999999995,16.119],[108.134,16.118000000000002],[108.131,16.116],[108.131,16.113],[108.134,16.109000000000002],[108.147000000000006,16.094999999999999],[108.149000000000001,16.094999999999999],[108.155000000000001,16.088999999999999],[108.168999999999997,16.081],[108.168999999999997,16.076000000000001],[108.174999999999997,16.074000000000002],[108.174999999999997,16.067],[108.177000000000007,16.062000000000001],[108.179000000000002,16.062000000000001],[108.171999999999997,16.058],[108.173000000000002,16.055],[108.171999999999997,16.056000000000001],[108.170000000000002,16.055],[108.171999999999997,16.045000000000002],[108.159000000000006,16.033000000000001],[108.152000000000001,16.036000000000001],[108.141999999999996,16.033999999999999],[108.138000000000005,16.039999999999999],[108.128,16.048000000000002],[108.128,16.050000000000001],[108.132000000000005,16.054000000000002],[108.134,16.064],[108.131,16.062999999999999],[108.126000000000005,16.067],[108.117000000000004,16.068000000000001],[108.117000000000004,16.079000000000001],[108.115000000000009,16.080000000000002],[108.116,16.091999999999999],[108.126000000000005,16.088999999999999],[108.123000000000005,16.094000000000001],[108.120000000000005,16.094000000000001],[108.118000000000009,16.097999999999999],[108.113,16.100999999999999],[108.116,16.103999999999999],[108.116,16.106999999999999],[108.114000000000004,16.108000000000001],[108.120000000000005,16.111000000000001],[108.119,16.112000000000002],[108.120000000000005,16.114000000000001],[108.119,16.115000000000002],[108.113,16.113],[108.109000000000009,16.106999999999999],[108.102000000000004,16.105],[108.102000000000004,16.106999999999999],[108.099000000000004,16.109999999999999],[108.097000000000008,16.120999999999999],[108.094999999999999,16.123999999999999],[108.096000000000004,16.129000000000001],[108.094999999999999,16.138999999999999],[108.087000000000003,16.138999999999999],[108.088000000000008,16.143000000000001],[108.093000000000004,16.146000000000001],[108.094999999999999,16.157],[108.093000000000004,16.158000000000001],[108.094999999999999,16.164000000000001],[108.091999999999999,16.18]]
"""

let haichau = """
[[108.188476300000005,16.0328962],[108.189984899999999,16.0284099],[108.190112900000003,16.028034999999999],[108.190429899999998,16.027138000000001],[108.190672899999996,16.026484],[108.191041900000002,16.025516],[108.191365899999994,16.024882000000002],[108.1918419,16.024190999999998],[108.192330900000002,16.023516999999998],[108.192651900000001,16.023823],[108.192677900000007,16.023831000000001],[108.192790900000006,16.023900999999999],[108.193250899999995,16.023606000000001],[108.193469899999997,16.023368000000001],[108.193810900000003,16.022986],[108.194212899999997,16.022601999999999],[108.194514900000001,16.022296999999998],[108.194423900000004,16.022244000000001],[108.194807900000001,16.022119],[108.195167900000001,16.022037999999998],[108.195664899999997,16.022064],[108.196038900000005,16.022176999999999],[108.196410900000004,16.022456999999999],[108.196709999999996,16.022817],[108.197243999999998,16.02308],[108.197778,16.023109999999999],[108.198068300000003,16.023090799999999],[108.199266699999995,16.023241599999999],[108.199440600000003,16.023107499999998],[108.199983700000004,16.023097799999999],[108.200605699999997,16.023418700000001],[108.201425299999997,16.023855900000001],[108.201963599999999,16.023966000000001],[108.202461900000003,16.023784500000001],[108.205231900000001,16.024036500000001],[108.205779899999996,16.024151499999999],[108.206308899999996,16.024406500000001],[108.207212900000002,16.025173500000001],[108.2080409,16.025623499999998],[108.208080899999999,16.025686499999999],[108.207797900000003,16.028064499999999],[108.208077900000006,16.0279615],[108.207955900000002,16.031222499999998],[108.207907899999995,16.031685499999998],[108.207554900000005,16.0329245],[108.207454900000002,16.033533500000001],[108.207294899999994,16.034072500000001],[108.208131899999998,16.034625500000001],[108.207517899999999,16.037022499999999],[108.207385900000006,16.037720499999999],[108.208381900000006,16.0386095],[108.208441899999997,16.038710500000001],[108.209901900000006,16.037864500000001],[108.210060900000002,16.037800499999999],[108.210142899999994,16.037827499999999],[108.2104219,16.038490500000002],[108.210485500000004,16.0387357],[108.2103769,16.039516500000001],[108.210330900000002,16.039848500000002],[108.210354899999999,16.040141500000001],[108.210458900000006,16.040276500000001],[108.210886900000006,16.0396325],[108.211208900000003,16.039054499999999],[108.211526899999996,16.0378565],[108.211606900000007,16.0377565],[108.211934900000003,16.0376425],[108.213841900000006,16.0349985],[108.215182900000002,16.032501499999999],[108.215125900000004,16.032064500000001],[108.214996900000003,16.0319115],[108.214135900000002,16.031761500000002],[108.213994900000003,16.031544499999999],[108.214008899999996,16.031468499999999],[108.214128900000006,16.031356500000001],[108.214600899999994,16.0312485],[108.214864899999995,16.031125500000002],[108.215089899999995,16.030925499999999],[108.215170900000004,16.030737500000001],[108.215186900000006,16.030534500000002],[108.215063900000004,16.0299385],[108.215093899999999,16.029698499999999],[108.215292899999994,16.029473500000002],[108.215489899999994,16.0294375],[108.216431900000003,16.029608499999998],[108.216996899999998,16.0296035],[108.217186900000002,16.029446499999999],[108.217823899999999,16.0287115],[108.218259900000007,16.028136499999999],[108.218385900000001,16.027862500000001],[108.218370899999996,16.027478500000001],[108.218269899999996,16.0259155],[108.218132900000001,16.0255595],[108.218067899999994,16.025025500000002],[108.218206899999998,16.024586500000002],[108.218455899999995,16.024347500000001],[108.218750900000003,16.024252499999999],[108.219120899999993,16.0243185],[108.219437900000003,16.024520500000001],[108.2196639,16.024745500000002],[108.220019899999997,16.024910500000001],[108.2213809,16.025299499999999],[108.222565900000006,16.025561499999998],[108.224464299999994,16.026156499999999],[108.2271377,16.0279405],[108.235488000000004,16.029212699999999],[108.236199600000006,16.034465099999998],[108.234121799999997,16.0444499],[108.231503099999998,16.048498299999999],[108.228660000000005,16.051227000000001],[108.228256999999999,16.051708000000001],[108.227271000000002,16.053715],[108.226726999999997,16.055264999999999],[108.226533000000003,16.056694],[108.226553999999993,16.058377],[108.22663,16.059904],[108.226614999999995,16.06203],[108.226302000000004,16.068508000000001],[108.226134000000002,16.071093000000001],[108.226044000000002,16.076338],[108.226106999999999,16.078322],[108.225744000000006,16.080876],[108.225393999999994,16.081976000000001],[108.224497,16.085719999999998],[108.217927000000003,16.099994800000001],[108.2149991,16.0961727],[108.213840300000001,16.096882300000001],[108.212681500000002,16.097463300000001],[108.211395400000001,16.097896299999999],[108.210082499999999,16.098239199999998],[108.208600500000003,16.098399400000002],[108.207118500000007,16.098431000000001],[108.205596299999996,16.098295199999999],[108.204114200000006,16.0979922],[108.204221700000005,16.0977344],[108.205636499999997,16.098087799999998],[108.207131700000005,16.098261000000001],[108.208579999999998,16.098221800000001],[108.210028300000005,16.098041200000001],[108.211304999999996,16.097728],[108.212581799999995,16.0972604],[108.213731300000006,16.096677],[108.214760299999995,16.096080700000002],[108.214730799999998,16.095893700000001],[108.214330200000006,16.0952205],[108.214035199999998,16.0945289],[108.213826499999996,16.0938023],[108.213666700000005,16.092972499999998],[108.213567100000006,16.092822999999999],[108.213442900000004,16.092739000000002],[108.213395500000004,16.092599700000001],[108.213471299999995,16.091962800000001],[108.213182799999998,16.091503599999999],[108.212755200000004,16.0911218],[108.2122028,16.0907585],[108.211383299999994,16.090111799999999],[108.210618400000001,16.089621999999999],[108.210052399999995,16.0894136],[108.209590800000001,16.089393699999999],[108.2089079,16.089324699999999],[108.208201000000003,16.0891895],[108.207423199999994,16.088983899999999],[108.207251099999993,16.088994499999998],[108.2069774,16.089660299999998],[108.206529200000006,16.090533400000002],[108.206039599999997,16.0913602],[108.2054215,16.092158399999999],[108.204727599999998,16.092863999999999],[108.203915600000002,16.093412499999999],[108.203027899999995,16.093868400000002],[108.202116000000004,16.094235099999999],[108.201149099999995,16.094515699999999],[108.201076700000002,16.0944295],[108.201088200000001,16.094329200000001],[108.2021096,16.0940054],[108.202945099999994,16.093655200000001],[108.203801299999995,16.093245499999998],[108.204598899999993,16.092700099999998],[108.205297599999994,16.0920062],[108.205886199999995,16.091252799999999],[108.206384499999999,16.090432199999999],[108.206758800000003,16.0895984],[108.2070583,16.088892600000001],[108.206996099999998,16.0887964],[108.206982100000005,16.088680400000001],[108.207123800000005,16.088153399999999],[108.207161999999997,16.0881179],[108.207275899999999,16.088102200000002],[108.207555299999996,16.0863245],[108.207471400000003,16.0850866],[108.207147699999993,16.083311999999999],[108.206799200000006,16.082201999999999],[108.206386300000005,16.0811539],[108.205696500000002,16.079763799999998],[108.205562999999998,16.079711],[108.205493200000006,16.079631299999999],[108.205460799999997,16.079522900000001],[108.205481899999995,16.079424599999999],[108.204798199999999,16.078258900000002],[108.207068100000001,16.076968699999998],[108.209783799999997,16.0745392],[108.212171699999999,16.076338799999998],[108.213061300000007,16.072784500000001],[108.214559600000001,16.065405800000001],[108.214496499999996,16.065081200000002],[108.214403799999999,16.064816799999999],[108.214390399999999,16.064535500000002],[108.214246200000005,16.063762499999999],[108.212733600000007,16.055866999999999],[108.210532999999998,16.052492300000001],[108.209924299999997,16.052942300000002],[108.209456000000003,16.055821999999999],[108.208098199999995,16.056406899999999],[108.205008000000007,16.056181899999999],[108.2049612,16.0567669],[108.2062253,16.0569019],[108.201917699999996,16.064685900000001],[108.193349400000002,16.0645509],[108.193115199999994,16.0620762],[108.190071799999998,16.060321500000001],[108.191101900000007,16.057441799999999],[108.189650400000005,16.056137],[108.190539999999999,16.053572200000001],[108.188526699999997,16.052762300000001],[108.189421300000006,16.050809900000001],[108.196252299999998,16.035708],[108.192876299999995,16.034492400000001],[108.188476300000005,16.0328962]]
"""
